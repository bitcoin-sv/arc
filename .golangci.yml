version: "2"
run:
  build-tags:
    - e2e
linters:
  default: none
  enable:
    - asasalint # checks for pass []any as any in variadic func(...any)
    - errcheck # checking for unchecked errors, these unchecked errors can be critical bugs in some cases
    - ineffassign # detects when assignments to existing variables are not used
    - revive # fast, configurable, extensible, flexible, and beautiful linter for Go, drop-in replacement of golint
    - staticcheck # is a go vet on steroids, applying a ton of static analysis checks
    - unused # checks for unused constants, variables, functions and types
    - sloglint # Ensure consistent code style when using log/slog
    - gosec # inspects source code for security problems
#    - asciicheck # checks that your code does not contain non-ASCII identifiers
#    - bidichk # checks for dangerous unicode character sequences
#    - bodyclose # checks whether HTTP response body is closed successfully
#    - cyclop # checks function and package cyclomatic complexity
#    - dupl # tool for code clone detection
#    - durationcheck # checks for two durations multiplied together
#    - errname # checks that sentinel errors are prefixed with the Err and error types are suffixed with the Error
#    - errorlint # finds code that will cause problems with the error wrapping scheme introduced in Go 1.13
#    - execinquery # checks query string in Query function which reads your Go src files and warning it finds
#    - exhaustive # checks exhaustiveness of enum switch statements
#    - exportloopref # checks for pointers to enclosing loop variables
#    - forbidigo # forbids identifiers
#    - funlen # tool for detection of long functions
#    - gocheckcompilerdirectives # validates go compiler directive comments (//go:)
#    - gochecknoglobals # checks that no global variables exist
#    - gochecknoinits # checks that no init functions are present in Go code
#    - gocognit # computes and checks the cognitive complexity of functions
#    - goconst # finds repeated strings that could be replaced by a constant
#    - gocritic # provides diagnostics that check for bugs, performance and style issues
#    - gocyclo # computes and checks the cyclomatic complexity of functions
#    - godot # checks if comments end in a period
#    - goimports # in addition to fixing imports, goimports also formats your code in the same style as gofmt
#    - gomnd # detects magic numbers
#    - gomoddirectives # manages the use of 'replace', 'retract', and 'excludes' directives in go.mod
#    - gomodguard # allow and block lists linter for direct Go module dependencies. This is different from depguard where there are different block types for example version constraints and module recommendations
#    - goprintffuncname # checks that printf-like functions are named with f at the end
#    - lll # reports long lines
#    - loggercheck # checks key value pairs for common logger libraries (kitlog,klog,logr,zap)
#    - makezero # finds slice declarations with non-zero initial length
#    - mirror # reports wrong mirror patterns of bytes/strings usage
#    - musttag # enforces field tags in (un)marshaled structs
#    - nakedret # finds naked returns in functions greater than a specified function length
#    - nestif # reports deeply nested if statements
#    - nilerr # finds the code that returns nil even if it checks that the error is not nil
#    - nilnil # checks that there is no simultaneous return of nil error and an invalid value
#    - noctx # finds sending http request without context.Context
#    - nolintlint # reports ill-formed or insufficient nolint directives
#    - nonamedreturns # reports all named returns
#    - nosprintfhostport # checks for misuse of Sprintf to construct a host with port in a URL
#    - predeclared # finds code that shadows one of Go's predeclared identifiers
#    - promlinter # checks Prometheus metrics naming via promlint
#    - reassign # checks that package variables are not reassigned
#    - rowserrcheck # checks whether Err of rows is checked successfully
#    - sqlclosecheck # checks that sql.Rows and sql.Stmt are closed
#    - stylecheck # is a replacement for golint
#    - tenv # detects using os.Setenv instead of t.Setenv since Go1.17
#    - testableexamples # checks if examples are testable (have an expected output)
#    - testpackage # makes you use a separate _test package
#    - tparallel # detects inappropriate usage of t.Parallel() method in your Go test codes
#    - unconvert # removes unnecessary type conversions
#    - unparam # reports unused function parameters
#    - usestdlibvars # detects the possibility to use variables/constants from the Go standard library
#    - wastedassign # finds wasted assignment statements
#    - whitespace # detects leading and trailing whitespace
#    - decorder # checks declaration order and count of types, constants, variables and functions
#    - exhaustruct # [highly recommend to enable] checks if all structure fields are initialized
#    - gci # controls golang package import order and makes it always deterministic
#    - ginkgolinter # [if you use ginkgo/gomega] enforces standards of using ginkgo and gomega
#    - godox # detects FIXME, TODO and other comment keywords
#    - goheader # checks is file header matches to pattern
#    - interfacebloat # checks the number of methods inside an interface
#    - ireturn # accept interfaces, return concrete types
#    - prealloc # [premature optimization, but can be used in some cases] finds slice declarations that could potentially be preallocated
#    - tagalign # checks that struct tags are well aligned
#    - varnamelen # [great idea, but too many false positives] checks that the length of a variable's name matches its scope
#    - wrapcheck # checks that errors returned from external packages are wrapped
#    - zerologlint # detects the wrong usage of zerolog that a user forgets to dispatch zerolog.Event
  settings:
    gosec:
      includes:
        - G115
    cyclop:
      max-complexity: 30
      package-average: 10
    errcheck:
      check-type-assertions: true
    exhaustive:
      check:
        - switch
        - map
    funlen:
      lines: 100
      statements: 50
      ignore-comments: true
    gocognit:
      min-complexity: 20
    gocritic:
      settings:
        captLocal:
          paramsOnly: false
        underef:
          skipRecvDeref: false
    gomodguard:
      blocked:
        modules:
          - github.com/golang/protobuf:
              recommendations:
                - google.golang.org/protobuf
              reason: see https://developers.google.com/protocol-buffers/docs/reference/go/faq#modules
          - github.com/satori/go.uuid:
              recommendations:
                - github.com/google/uuid
              reason: satori's package is not maintained
          - github.com/gofrs/uuid:
              recommendations:
                - github.com/google/uuid
              reason: gofrs' package is not go module
    govet:
      disable:
        - fieldalignment
      enable-all: true
      settings:
        shadow:
          strict: true
    nolintlint:
      require-explanation: true
      require-specific: true
      allow-no-explanation:
        - funlen
        - gocognit
        - lll
    revive:
      enable-all-rules: true
      rules:
        - name: cognitive-complexity
          disabled: true
          exclude: [ "TEST" ]
          arguments: [ 40 ]
          severity: "warning"
        - name: line-length-limit
          disabled: true
        - name: add-constant
          disabled: true
        - name: deep-exit
          disabled: true
        - name: function-length
          disabled: true
        - name: confusing-naming
          disabled: true
        - name: max-public-structs
          disabled: true
        - name: import-alias-naming
          disabled: true
        - name: cyclomatic
          disabled: true
          exclude: [ "TEST" ]
          arguments: [ 20 ]
          severity: "warning"
        - name: use-any
          disabled: true
        - name: confusing-results
          disabled: true
        - name: flag-parameter
          disabled: false
        - name: unused-receiver
          disabled: true
        - name: bare-return
          disabled: true
        - name: function-result-limit
          disabled: true
        - name: flag-parameter
          disabled: true
        - name: datarace
          disabled: true
        - name: if-return
          disabled: true
        - name: unhandled-error
          disabled: true
        - name: redundant-import-alias
          disabled: true
        - name: import-shadowing
          disabled: true
        - name: range-val-in-closure
          disabled: true
        - name: defer
          disabled: true
        - name: modifies-value-receiver
          disabled: true
        - name: comment-spacings
          disabled: true
        - name: argument-limit
          disabled: true
    rowserrcheck:
      packages:
        - github.com/jmoiron/sqlx
    staticcheck:
      checks:
        - all
        - -ST1003 # Poorly chosen identifier https://staticcheck.dev/docs/checks/#ST1003
        - -QF1008 # Omit embedded fields from selector expression https://staticcheck.dev/docs/checks/#QF1008
  exclusions:
    generated: lax
    presets:
      - comments
      - common-false-positives
      - legacy
      - std-error-handling
    rules:
      - path: (.+)\.go$
        text: don't use an underscore in package name
    paths:
      - third_party$
      - builtin$
      - examples$
issues:
  max-same-issues: 50
formatters:
  exclusions:
    generated: lax
    paths:
      - third_party$
      - builtin$
      - examples$

---
logLevel: DEBUG # mode of logging. Value can be one of TRACE | DEBUG | INFO | WARN | ERROR
logFormat: text # format of logging. Value can be one of text | json | tint
profilerAddr: localhost:9999 # address to start profiler server on
prometheus:
  enabled: false # if true, then prometheus metrics are enabled
  endpoint: /metrics # endpoint for prometheus metrics
  addr: :2112 # port for serving prometheus metrics
grpcMessageSize: 100000000 # maximum grpc message size
network: regtest # bitcoin network to connect to. Value can be one of mainnet | testnet | regtest
messageQueue:
  streaming:
    enabled: true  # if enabled, message queue can store messages - currently ARC only supports message queue with streaming enabled
    fileStorage: false # if enabled messages are persisted on disk instead of in memory
  URL: nats://nats:4222 # URL for message queue
  initialize: true # initialize streams and consumers
reBroadcastExpiration: 24h # time since last submitted after which transactions are not re-broadcasted anymore

tracing:
  enabled: true # if true, then tracing is enabled
  dialAddr: http://localhost:4317 # address where traces are exported to
  sample: 100 # sampling in percentage
  attributes: # attributes to be added to each trace
    key1: value1
    key2: 100

peerRpc: # rpc configuration for bitcoin node
  password: bitcoin
  user: bitcoin
  host: localhost
  port: 18332

cache:
  engine: redis # cache engine - one of in-memory | redis
  redis: # redis cache configuration in case that engine: redis
    addr: "localhost:6379"
    password: ""
    db: 1

metamorph:
  listenAddr: localhost:8001 # address space for metamorph to listen on. Can be for example localhost:8001 or :8001 for listening on all addresses
  dialAddr: localhost:8001 # address for other services to dial metamorph service
  db:
    mode: postgres # db mode indicates which db to use. At the moment only postgres is offered
    postgres: # postgres db configuration in case that mode: postgres
      host: localhost
      port: 5432
      name: metamorph
      user: arc
      password: arc
      maxIdleConns: 10 # maximum idle connections
      maxOpenConns: 80 # maximum open connections
      sslMode: disable
  maxRetries: 1000 # maximum number of times a transaction is re-announced
  statusUpdateInterval: 5s # interval of processing status updates
  doubleSpendTxStatusOlderThanInterval: 10m # time interval after which double spend transactions are considered to be old and checked
  doubleSpendCheckInterval: 10s # interval of checking for double spends and marking as rejected if competing mined
  reAnnounceUnseenInterval: 60s # time interval in which unseen transactions are re-announced
  reAnnounceSeen:
    pendingSince: 10m # time duration after which transaction was marked as SEEN_ON_NETWORK transactions should be re-requested since it was last submitted
    lastConfirmedAgo: 10m # time duration after which transaction was marked as SEEN_ON_NETWORK transactions should be re-requested since it was last submitted
  rejectPendingSeen:
    enabled: false # if enabled, transactions which are pending in seen on network status for too long, are rejected
    lastRequestedAgo: 10m # time duration after which SEEN_ON_NETWORK transactions should be re-requested since it was last submitted
    blocksSince: 3 # number of processed blocks after which transactions with SEEN_ON_NETWORK status will be considered rejected
  reRegisterSeen: 10m # time duration after which SEEN_ON_NETWORK transactions should be re-registered since it was last submitted
  monitorPeers: false # if enabled, peers which do not receive alive signal from nodes will be restarted
  health:
    minimumHealthyConnections: 2 # minimum number of healthy peer connections for the processor to be considered healthy
  rejectCallbackContaining: [ "http://localhost", "https://localhost" ]
  stats:
    notSeenTimeLimit: 10m # amount of time after storing at which a non-seen tx will be counted towards not seen stat
    notFinalTimeLimit: 20m # amount of time after storing at which a seen but not mined tx will be counted towards not mined stat
  bcnet:
    mode: classic # [classic|hybrid]
    network: regtest # bitcoin network to connect to. Value can be one of mainnet | testnet | regtest
    peers: # list of bitcoin node peers to connect to (required)
    - host: localhost
      port:
        p2p: 18333 # port for p2p connection
        zmq: 28332 # port for zmq connection
    - host: localhost
      port:
        p2p: 18334
    - host: localhost
      port:
        p2p: 18335
    mcast: # multicast groups (required if mode: hybrid)
      tx:
        address: "[]" # multicast group IPv6 address
        interfaces:
        - "eth0"
        - "eth1"
      reject:
        address: "[]" # multicast group IPv6 address
        interfaces:
        - "eth0"
        - "eth1"

blocktx:
  listenAddr: localhost:8011 # address space for blocktx to listen on. Can be for example localhost:8011 or :8011 for listening on all addresses
  dialAddr: localhost:8011 # address for other services to dial blocktx service
  db:
    mode: postgres # db mode indicates which db to use. At the moment only postgres is offered
    postgres: # postgres db configuration in case that mode: postgres
      host: localhost
      port: 5432
      name: blocktx
      user: arc
      password: arc
      maxIdleConns: 10 # maximum idle connections
      maxOpenConns: 80 # maximum open connections
      sslMode: disable
  recordRetentionDays: 28 # number of days for which data integrity is ensured
  registerTxsInterval: 10s # time interval to read from the channel registered transactions
  maxBlockProcessingDuration: 5m # maximum time a blocktx can spend on processing a block before unlocking it to be requested again
  monitorPeers: false # if enabled, peers which do not receive alive signal from nodes will be restarted
  incomingIsLongest: false # whether each new block received is considered to be from the longest blockchain. If there are a lot of block gaps in blocktx database it is advisable to set this to true
  fillGaps:
    enabled: true
    interval: 15m # time interval to check and fill gaps in processed blocks
  unorphanRecentWrongOrphans:
    enabled: false
    interval: 5m # time interval to check and fix wrong orphan blocks
  maxAllowedBlockHeightMismatch: 3 # maximum number of blocks that can be ahead of current highest block in blocktx, used for merkle roots verification
  p2pReadBufferSize: 8388608 # size of read buffer for p2p messeges
  bcnet:
    mode: classic # [classic|hybrid]
    network: regtest # bitcoin network to connect to. Value can be one of mainnet | testnet | regtest
    peers: # list of bitcoin node peers to connect to (required)
    - host: localhost
      port:
        p2p: 18333 # port for p2p connection
        zmq: 28332 # port for zmq connection
    - host: localhost
      port:
        p2p: 18334
    - host: localhost
      port:
        p2p: 18335
    mcast: # multicast groups (required if mode: hybrid)
      block:
        address: "[]" # multicast group IPv6 address
        interfaces:
        - "eth0"
        - "eth1"

api:
  merkleRootVerification: # settings related to Merkle root verification
    timeout: 5s # timeout when calling block header service
    blockHeaderServices: # block header services to call during Merkle root verification of BEEF format. If none given WoC will be used as block header service by default
      - url: https://bhs-1.com # url of block header service
        apiKey: XXX # api key to be used with block header service for authentication
  standardFormatSupported: true # requires RPC connection to node to be able to validate
  address: localhost:9090 # address to start api server on
  listenAddr: localhost:8033 # address for grpc endpoint
  wocApiKey: "mainnet_XXXXXXXXXXXXXXXXXXXX" # api key for www.whatsonchain.com
  wocMainnet: false # query main or test net on www.whatsonchain.com
  requestExtendedLogs: true # if true, the logs will include request methods & headers
  defaultPolicy: # default policy of bitcoin node
    excessiveblocksize: 2000000000
    blockmaxsize: 512000000
    maxtxsizepolicy: 100000000
    maxorphantxsize: 1000000000
    datacarriersize: 4294967295
    maxscriptsizepolicy: 100000000
    maxopsperscriptpolicy: 4294967295
    maxscriptnumlengthpolicy: 10000
    maxpubkeyspermultisigpolicy: 4294967295
    maxtxsigopscountspolicy: 4294967295
    maxstackmemoryusagepolicy: 100000000
    maxstackmemoryusageconsensus: 200000000
    limitancestorcount: 10000
    limitcpfpgroupmemberscount: 25
    maxmempool: 2000000000
    maxmempoolsizedisk: 0
    mempoolmaxpercentcpfp: 10
    acceptnonstdoutputs: true
    datacarrier: true
    minminingtxfee: 1e-8
    maxstdtxvalidationduration: 3
    maxnonstdtxvalidationduration: 1000
    maxtxchainvalidationbudget: 50
    validationclockcpu: true
    minconsolidationfactor: 20
    maxconsolidationinputscriptsize: 150
    minconfconsolidationinput: 6
    minconsolidationinputmaturity: 6
    acceptnonstdconsolidationinput: false

k8sWatcher:
  namespace: arc-namespace

callbacker:
  listenAddr: localhost:8021 # address space for callbacker to listen on. Can be for example localhost:8021 or :8021 for listening on all addresses
  dialAddr: localhost:8021 # address for other services to dial callbacker service
  pause: 1s # pause between sending next callback to the same receiver - must be greater 0s
  batchSendInterval: 5s # interval at witch batched callbacks are send (default 5s)
  pruneOlderThan: 336h # age threshold for pruning callbacks (older than this value will be removed)
  pruneInterval: 24h # interval at which old or failed callbacks are pruned from the store
  expiration: 24h # maximum time a callback can remain unsent before it's put as permanently failed
  db:
    mode: postgres # db mode indicates which db to use. At the moment only postgres is offered
    postgres: # postgres db configuration in case that mode: postgres
      host: localhost
      port: 5432
      name: callbacker
      user: arc
      password: arc
      maxIdleConns: 10 # maximum idle connections
      maxOpenConns: 80 # maximum open connections
      sslMode: disable

---
logLevel: DEBUG # mode of logging. Value can be one of TRACE | DEBUG | INFO | WARN | ERROR
logFormat: text # format of logging. Value can be one of text | json | tint
profilerAddr: localhost:9999 # address to start profiler server on (optional)
prometheus:
  enabled: false # if true, then prometheus metrics are enabled
  endpoint: /metrics # endpoint for prometheus metrics (optional)
  addr: :2112 # port for serving prometheus metrics
grpcMessageSize: 100000000 # maximum grpc message size
network: regtest # bitcoin network to connect to. Value can be one of mainnet | testnet | regtest
messageQueue:
  streaming:
    enabled: false  # if enabled, message queue can store messages
    fileStorage: false # if enabled messages are persisted on disk instead of in memory
  URL: nats://nats:4222 # URL for message queue
tracing: # (optional)
  enabled: true # if true, then tracing is enabled
  dialAddr: http://localhost:4317 # address where traces are exported to
  sample: 100 # sampling in percentage
  attributes:
    key1: value1
    key2: 100

peerRpc: # rpc configuration for bitcoin node
  password: bitcoin
  user: bitcoin
  host: localhost
  port: 18332

broadcasting: # settings for connection to nodes
  mode: unicast # one of unicast | multicast
  multicast:
    ipv6Enabled: true # indicates whether ipv6 is enabled for multicasting
    multicastGroups: # must be specified if mode = multicast
    - "172.28.56.77" # address of multicast group, needs to be ipv6 address if ipv6 is enabled
    interfaces:
    - "eth0"
    - "eth1"
  unicast:
    peers: # list of bitcoin node peers to connect to
    - host: localhost
      port:
        p2p: 18333 # port for p2p connection
        zmq: 28332 # port for zmq connection
    - host: localhost
      port:
        p2p: 18334
    - host: localhost
      port:
        p2p: 18335

cache:
  engine: redis # cache engine - one of in-memory | redis
  redis: # redis cache configuration in case that engine: redis
    addr: "localhost:6379"
    password: ""
    db: 1

metamorph:
  listenAddr: localhost:8001 # address space for metamorph to listen on. Can be for example localhost:8001 or :8001 for listening on all addresses
  dialAddr: localhost:8001 # address for other services to dial metamorph service
  db:
    mode: postgres # db mode indicates which db to use. At the moment only postgres is offered
    postgres: # postgres db configuration in case that mode: postgres
      host: localhost
      port: 5432
      name: metamorph
      user: arc
      password: arc
      maxIdleConns: 10 # maximum idle connections
      maxOpenConns: 80 # maximum open connections
      sslMode: disable
  processorCacheExpiryTime: 24h # time after which processor cache is cleaned
  unseenTransactionRebroadcastingInterval: 60s # time interval in which unseen transactions are re-broadcasted
  maxRetries: 1000 # maximum number of times a transaction is re-broadcasted
  processStatusUpdateInterval: 5s # interval of processing status updates
  recheckSeen: # re-check SEEN_ON_NETWORK transactions that have been last submitted inside a moving time window in the past whether they were mined
    fromAgo: 24h # start of moving time window
    untilAgo: 1h # end of moving time window
  monitorPeers: false # if enabled, peers which do not receive alive signal from nodes will be restarted
  health:
    serverDialAddr: localhost:8005 # address at which the grpc health server is exposed
    minimumHealthyConnections: 2 # minimum number of healthy peer connections for the processor to be considered healthy
  rejectCallbackContaining: [ "http://localhost", "https://localhost" ]
  stats:
    notSeenTimeLimit: 10m # amount of time after storing at which a non-seen tx will be counted towards not seen stat
    notFinalTimeLimit: 20m # amount of time after storing at which a seen but not mined tx will be counted towards not mined stat

blocktx:
  listenAddr: localhost:8011 # address space for blocktx to listen on. Can be for example localhost:8011 or :8011 for listening on all addresses
  dialAddr: localhost:8011 # address for other services to dial blocktx service
  healthServerDialAddr: localhost:8006 # address at which the grpc health server is exposed
  db:
    mode: postgres # db mode indicates which db to use. At the moment only postgres is offered
    postgres: # postgres db configuration in case that mode: postgres
      host: localhost
      port: 5432
      name: blocktx
      user: arc
      password: arc
      maxIdleConns: 10 # maximum idle connections
      maxOpenConns: 80 # maximum open connections
      sslMode: disable
  recordRetentionDays: 28 # number of days for which data integrity is ensured
  registerTxsInterval: 10s # time interval to read from the channel registered transactions
  maxBlockProcessingDuration: 5m # maximum time a blocktx can spend on processing a block before unlocking it to be requested again
  monitorPeers: false # if enabled, peers which do not receive alive signal from nodes will be restarted
  incomingIsLongest: false # whether each new block received is considered to be from the longest blockchain. If there are a lot of block gaps in blocktx database it is advisable to set this to true
  fillGaps:
    enabled: true
    interval: 15m # time interval to check and fill gaps in processed blocks
  maxAllowedBlockHeightMismatch: 3 # maximum number of blocks that can be ahead of current highest block in blocktx, used for merkle roots verification
  p2pReadBufferSize: 8388608 # size of read buffer for p2p messeges

api:
  address: localhost:9090 # address to start api server on
  wocApiKey: "mainnet_XXXXXXXXXXXXXXXXXXXX" # api key for www.whatsonchain.com
  wocMainnet: false # query main or test net on www.whatsonchain.com
  requestExtendedLogs: true # if true, the logs will include request methods & headers
  processorCacheExpiryTime: 24h # time after which processor cache is cleaned
  defaultPolicy: # default policy of bitcoin node
    excessiveblocksize: 2000000000
    blockmaxsize: 512000000
    maxtxsizepolicy: 100000000
    maxorphantxsize: 1000000000
    datacarriersize: 4294967295
    maxscriptsizepolicy: 100000000
    maxopsperscriptpolicy: 4294967295
    maxscriptnumlengthpolicy: 10000
    maxpubkeyspermultisigpolicy: 4294967295
    maxtxsigopscountspolicy: 4294967295
    maxstackmemoryusagepolicy: 100000000
    maxstackmemoryusageconsensus: 200000000
    limitancestorcount: 10000
    limitcpfpgroupmemberscount: 25
    maxmempool: 2000000000
    maxmempoolsizedisk: 0
    mempoolmaxpercentcpfp: 10
    acceptnonstdoutputs: true
    datacarrier: true
    minminingtxfee: 1e-8
    maxstdtxvalidationduration: 3
    maxnonstdtxvalidationduration: 1000
    maxtxchainvalidationbudget: 50
    validationclockcpu: true
    minconsolidationfactor: 20
    maxconsolidationinputscriptsize: 150
    minconfconsolidationinput: 6
    minconsolidationinputmaturity: 6
    acceptnonstdconsolidationinput: false

k8sWatcher: # (optional, used only when deploying arc to k8s)
  namespace: arc-testnet

callbacker:
  listenAddr: localhost:8021 # address space for callbacker to listen on. Can be for example localhost:8021 or :8021 for listening on all addresses
  dialAddr: localhost:8021 # address for other services to dial callbacker service
  health:
    serverDialAddr: localhost:8025 # address at which the grpc health server is exposed
  delay: 0s # delay before the callback (or batch of callbacks) is actually sent
  pause: 0s # pause between sending next callback to the same receiver
  batchSendInterval: 5s # interval at witch batched callbacks are send (default 5s)
  db:
    mode: postgres # db mode indicates which db to use. At the moment only postgres is offered
    postgres: # postgres db configuration in case that mode: postgres
      host: localhost
      port: 5432
      name: callbacker
      user: arc
      password: arc
      maxIdleConns: 10 # maximum idle connections
      maxOpenConns: 80 # maximum open connections
      sslMode: disable
  pruneInterval: 24h # interval at which old or failed callbacks are pruned from the store
  pruneOlderThan: 336h # age threshold for pruning callbacks (older than this value will be removed)
  failedCallbackCheckInterval: 1m # interval at which the store is checked for failed callbacks to be re-sent
  delayDuration: 5s # we try callbacks a few times with this delay after which if it fails consistently we store them in db
  expiration: 24h # maximum time a callback can remain unsent before it's put as permanently failed

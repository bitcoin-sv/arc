@startuml
digraph arc {
  rankdir=TB;
  graph [fontsize=10 fontname="Verdana"];
  node [shape=record fontsize=10 fontname="Verdana"];
  edge [fontsize=9 fontname="Verdana"];

  customer_app [shape=rectangle, label="customer\n app"]
  customer_app -> api

  subgraph cluster_arc {
		label = "ARC";
		color=black;

    api [shape=rectangle, label="API", style=filled, fillcolor=yellow]
    validation [shape=rectangle, label="validation"]
    empty [width=0 height=0 label="" margin="0.5,0" color="white"]  // to adjust nodes to the left

    api -> {validation mtm }

    { rank=same; api; validation; empty; }

    mtm -> {btx [style="dashed", dir="both"] cb}

    subgraph cluster_mtm {
      label = "metamorph";
      mtm [shape=rectangle, label="service", style=filled, fillcolor=yellow]
      metamorph_store [shape=cylinder, label="store", style=filled]
      mtm -> metamorph_store
      mtm -> node_connection [style="dashed", arrowhead=none]
    }

    subgraph cluster_blocktx {
      label = "blocktx";
      blocktx_store [shape=cylinder, label="store", style=filled]
      btx [shape=rectangle, label="service", style=filled, fillcolor=yellow]
      btx -> blocktx_store
      btx -> node_connection [style="dashed", arrowhead=none]
    }

    subgraph cluster_callbacker {
      label = "callbacker";
      callbacker_store [shape=cylinder, label="store", style=filled]
      cb [shape=rectangle, label="service", style=filled, fillcolor=yellow]
      cb -> callbacker_store
    }
	}

  subgraph cluster_nodes {
    newrank=true;
    node_connection [ shape=point ];
    label = "bitcoin nodes"

    node_connection -> b_node_1 [style="dashed", label="p2p"]
    node_connection -> b_node_n [style="dashed"]
    node_connection -> b_node_2 [style="dashed"]

    b_node_1 -> mtm [style="dashed", label="zmq"]
    b_node_1 [shape=rectangle, label="node 1", style=filled, fillcolor=cyan]
    b_node_2 [shape=rectangle, label="node 2", style=filled, fillcolor=cyan]
    b_node_n [shape=rectangle, label="node n ...", style=filled, fillcolor=cyan]
  }

  b_node_1 -> p2p_network [style="dashed"]
  b_node_2 -> p2p_network [style="dashed"]
  b_node_n -> p2p_network [style="dashed"]

  p2p_network [shape=hexagon, label="p2p\n network", style=filled, fillcolor=lightblue]
}
@enduml

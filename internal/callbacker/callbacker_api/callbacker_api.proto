syntax = "proto3";

option go_package = ".;callbacker_api";

package callbacker_api;

import "google/protobuf/timestamp.proto";
import "google/protobuf/empty.proto";

service CallbackerAPI {
  rpc Health (google.protobuf.Empty) returns (HealthResponse) {}
  rpc SendCallback (SendRequest) returns (google.protobuf.Empty) {}
}

// Note: Values of the statuses have a difference between them in case
// it's necessary to add another values in between. This will allow to
// create new statuses without changing the values in the existing db.
enum Status {
  UNKNOWN = 0;
  QUEUED = 10;
  RECEIVED = 20;
  STORED = 30;
  ANNOUNCED_TO_NETWORK = 40;
  REQUESTED_BY_NETWORK = 50;
  SENT_TO_NETWORK = 60;
  ACCEPTED_BY_NETWORK = 70;
  SEEN_IN_ORPHAN_MEMPOOL = 80;
  SEEN_ON_NETWORK = 90;
  DOUBLE_SPEND_ATTEMPTED = 100;
  REJECTED = 110;
  MINED_IN_STALE_BLOCK = 115;
  MINED = 120;
}

// swagger:model HealthResponse
message HealthResponse {
  google.protobuf.Timestamp timestamp = 1;
  string nats = 2;
}

// swagger:model SendRequest
message SendRequest {
  CallbackRouting callback_routing = 1;
  string txid = 2;
  Status status = 3;
  string merkle_path = 4;
  string extra_info = 5;
  repeated string competing_txs = 6;
  string block_hash = 7;
  uint64 block_height = 8;
  google.protobuf.Timestamp timestamp = 9;
}

// swagger:model CallbackRouting
message CallbackRouting {
  string url = 1;
  string token = 2;
  bool allow_batch = 3;
}

// Code generated by moq; DO NOT EDIT.
// github.com/matryer/moq

package mocks

import (
	"context"
	"github.com/bitcoin-sv/arc/internal/p2p"
	"net"
	"sync"
)

// Ensure, that DialerMock does implement p2p.Dialer.
// If this is not the case, regenerate this file with moq.
var _ p2p.Dialer = &DialerMock{}

// DialerMock is a mock implementation of p2p.Dialer.
//
//	func TestSomethingThatUsesDialer(t *testing.T) {
//
//		// make and configure a mocked p2p.Dialer
//		mockedDialer := &DialerMock{
//			DialContextFunc: func(ctx context.Context, network string, address string) (net.Conn, error) {
//				panic("mock out the DialContext method")
//			},
//		}
//
//		// use mockedDialer in code that requires p2p.Dialer
//		// and then make assertions.
//
//	}
type DialerMock struct {
	// DialContextFunc mocks the DialContext method.
	DialContextFunc func(ctx context.Context, network string, address string) (net.Conn, error)

	// calls tracks calls to the methods.
	calls struct {
		// DialContext holds details about calls to the DialContext method.
		DialContext []struct {
			// Ctx is the ctx argument value.
			Ctx context.Context
			// Network is the network argument value.
			Network string
			// Address is the address argument value.
			Address string
		}
	}
	lockDialContext sync.RWMutex
}

// DialContext calls DialContextFunc.
func (mock *DialerMock) DialContext(ctx context.Context, network string, address string) (net.Conn, error) {
	if mock.DialContextFunc == nil {
		panic("DialerMock.DialContextFunc: method is nil but Dialer.DialContext was just called")
	}
	callInfo := struct {
		Ctx     context.Context
		Network string
		Address string
	}{
		Ctx:     ctx,
		Network: network,
		Address: address,
	}
	mock.lockDialContext.Lock()
	mock.calls.DialContext = append(mock.calls.DialContext, callInfo)
	mock.lockDialContext.Unlock()
	return mock.DialContextFunc(ctx, network, address)
}

// DialContextCalls gets all the calls that were made to DialContext.
// Check the length with:
//
//	len(mockedDialer.DialContextCalls())
func (mock *DialerMock) DialContextCalls() []struct {
	Ctx     context.Context
	Network string
	Address string
} {
	var calls []struct {
		Ctx     context.Context
		Network string
		Address string
	}
	mock.lockDialContext.RLock()
	calls = mock.calls.DialContext
	mock.lockDialContext.RUnlock()
	return calls
}

package defaultvalidator

import (
	"context"
	"encoding/hex"
	"encoding/json"
	"errors"
	"os"
	"testing"

	"github.com/bitcoin-sv/arc/internal/blocktx/blocktx_api"
	btxMocks "github.com/bitcoin-sv/arc/internal/blocktx/mocks"
	goscript "github.com/bitcoin-sv/bdk/module/gobdk/script"
	"github.com/bsv-blockchain/go-sdk/chainhash"
	"github.com/bsv-blockchain/go-sdk/script"
	sdkTx "github.com/bsv-blockchain/go-sdk/transaction"
	feemodel "github.com/bsv-blockchain/go-sdk/transaction/fee_model"
	"github.com/ordishs/go-bitcoin"
	"github.com/stretchr/testify/require"

	"github.com/bitcoin-sv/arc/internal/testdata"
	"github.com/bitcoin-sv/arc/internal/validator"
	fixture "github.com/bitcoin-sv/arc/internal/validator/default/testdata"
	"github.com/bitcoin-sv/arc/internal/validator/mocks"
)

var validLockingScript = &script.Script{
	0x76, 0xa9, 0x14, 0xcd, 0x43, 0xba, 0x65, 0xce, 0x83, 0x77, 0x8e, 0xf0, 0x4b, 0x20, 0x7d, 0xe1, 0x44, 0x98, 0x44, 0x0f, 0x3b, 0xd4, 0x6c, 0x88, 0xac,
}

const (
	opReturnTx = "010000000000000000ef01478a4ac0c8e4dae42db983bc720d95ed2099dec4c8c3f2d9eedfbeb74e18cdbb1b0100006b483045022100b05368f9855a28f21d3cb6f3e278752d3c5202f1de927862bbaaf5ef7d67adc50220728d4671cd4c34b1fa28d15d5cd2712b68166ea885522baa35c0b9e399fe9ed74121030d4ad284751daf629af387b1af30e02cf5794139c4e05836b43b1ca376624f7fffffffff10000000000000001976a9140c77a935b45abdcf3e472606d3bc647c5cc0efee88ac01000000000000000070006a0963657274696861736822314c6d763150594d70387339594a556e374d3948565473446b64626155386b514e4a406164386337373536356335363935353261626463636634646362353537376164633936633866613933623332663630373865353664666232326265623766353600000000"
	runTx      = "010000000000000000ef0288e59c195e017a9606fcaa21ae75ae670b8d1042380db5eb1860dff6868d349d010000006a4730440220771f717cab9acf745b2448b057b720913c503989262a5291edfd00a7a151fa5e02200d5c5cdd0b9320a796ba7c4e196ff04d5d7be8e7ca069c9af59bb8a2da5dfb41412102028571938947eeceeefac38f0a59f460ea57dc2922047240c1a777cb02261936ffffffff11010000000000001976a91428566dfea52b366fa3f545f7e4ab4392d48ddaae88ac19cb57677947f90549a8b7a207563fe254edce80c042e3ddf06e84e78e6e0934010000006a473044022036bffed646b47f6becea192696b3bf4c4bbee80c29cbc79a9e598c6dce895d3502205e5bc389e805d05b23684469666d8cc81ad3635445df6e8a344d27962016ce94412102213568f72dc2aa813f0154b80d5492157e5c47e69ce0d0ec421d8e3fdb1cde6affffffff404b4c00000000001976a91428c115c42ec654230f1666637d2e72808b1ff46d88ac030000000000000000b1006a0372756e0105004ca67b22696e223a312c22726566223a5b5d2c226f7574223a5b5d2c2264656c223a5b2231376238623534616237363066306635363230393561316664336432306533353865623530653366383638626535393230346462386333343939363337323135225d2c22637265223a5b5d2c2265786563223a5b7b226f70223a2243414c4c222c2264617461223a5b7b22246a6967223a307d2c2264657374726f79222c5b5d5d7d5d7d404b4c00000000001976a91488c05fb97867cab4f4875e5cd4c96929c15f1ca988acf4000000000000001976a9149f4fa07a87b9169f2a66a0456c0c8d4f1209504f88ac00000000"
)

func TestValidator(t *testing.T) {
	t.Parallel()

	tt := []struct {
		name     string
		txHex    string
		satPerKb uint64
		finder   validator.TxFinderI

		expectedError error
	}{
		{
			name:     "valid tx",
			txHex:    "020000000000000000ef010f117b3f9ea4955d5c592c61838bea10096fc88ac1ad08561a9bcabd715a088200000000494830450221008fd0e0330470ac730b9f6b9baf1791b76859cbc327e2e241f3ebeb96561a719602201e73532eb1312a00833af276d636254b8aa3ecbb445324fb4c481f2a493821fb41feffffff00f2052a01000000232103b12bda06e5a3e439690bf3996f1d4b81289f4747068a5cbb12786df83ae14c18ac02a0860100000000001976a914b7b88045cc16f442a0c3dcb3dc31ecce8d156e7388ac605c042a010000001976a9147a904b8ae0c2f9d74448993029ad3c040ebdd69a88ac66000000",
			satPerKb: 500,
		},
		// {
		// 	name:     "invalid tx",
		// 	txHex:    "020000000000000000ef010f117b3f9ea4955d5c592c61838bea10096fc88ac1ad08561a9bcabd715a088200000000494830450221008fd0e0330470ac730b9f6b9baf1791b76859cbc327e2e241f3ebeb96561a719602201e73532eb1312a00833af276d636254b8aa3ecbb445324fb4c481f2a493821fb41feffffff00e40b5402000000232103b12bda06e5a3e439690bf3996f1d4b81289f4747068a5cbb12786df83ae14c18ac02a0860100000000001976a914b7b88045cc16f442a0c3dcb3dc31ecce8d156e7388ac605c042a010000001976a9147a904b8ae0c2f9d74448993029ad3c040ebdd69a88ac66000000",
		// 	satPerKb: 500,

		// 	expectedError: validator.ErrScriptExecutionFailed,
		// },
		// {
		// 	name:     "low fee error",
		// 	txHex:    "010000000000000000ef01a7968c39fe10ae04686061ab99dc6774f0ebbd8679e521e6fc944d919d9d19a1020000006a4730440220318d23e6fd7dd5ace6e8dc1888b363a053552f48ecc166403a1cc65db5e16aca02203a9ad254cb262f50c89487ffd72e8ddd8536c07f4b230d13a2ccd1435898e89b412102dd7dce95e52345704bbb4df4e4cfed1f8eaabf8260d33597670e3d232c491089ffffffff44040000000000001976a914cd43ba65ce83778ef04b207de14498440f3bd46c88ac013a040000000000001976a9141754f52fc862c7a6106c964c35db7d92a57fec2488ac00000000",
		// 	satPerKb: 500,

		// 	expectedError: ErrTxFeeTooLow,
		// },
		// {
		// 	name:     "valid tx 2",
		// 	txHex:    "010000000000000000ef01a7968c39fe10ae04686061ab99dc6774f0ebbd8679e521e6fc944d919d9d19a1020000006a4730440220318d23e6fd7dd5ace6e8dc1888b363a053552f48ecc166403a1cc65db5e16aca02203a9ad254cb262f50c89487ffd72e8ddd8536c07f4b230d13a2ccd1435898e89b412102dd7dce95e52345704bbb4df4e4cfed1f8eaabf8260d33597670e3d232c491089ffffffff44040000000000001976a914cd43ba65ce83778ef04b207de14498440f3bd46c88ac013a040000000000001976a9141754f52fc862c7a6106c964c35db7d92a57fec2488ac00000000",
		// 	satPerKb: 5,
		// },
		// {
		// 	name:     "valid Raw Format tx - expect success",
		// 	txHex:    fixture.ValidTxRawHex,
		// 	satPerKb: 5,
		// 	finder: &mocks.TxFinderIMock{
		// 		GetRawTxsFunc: func(_ context.Context, _ validator.FindSourceFlag, _ []string) []*sdkTx.Transaction {
		// 			return []*sdkTx.Transaction{fixture.ParentTx1}
		// 		},
		// 	},

		// 	expectedError: ErrTxFeeTooLow,
		// },
	}

	for _, tc := range tt {
		t.Run(tc.name, func(t *testing.T) {
			// given
			// extended tx
			tx, _ := sdkTx.NewTransactionFromHex(tc.txHex)
			policy := getPolicy(tc.satPerKb)
			require.True(t, isExtended(tx))
			se := goscript.NewScriptEngine("regtest")
			btxClient := &btxMocks.ClientMock{
				CurrentBlockHeightFunc: func(_ context.Context) (*blocktx_api.CurrentBlockHeightResponse, error) {
					return &blocktx_api.CurrentBlockHeightResponse{
						CurrentBlockHeight: 1,
					}, nil
				},
			}
			sut := New(policy, tc.finder, btxClient, se, int32(1))

			// when
			actualError := sut.ValidateTransaction(context.TODO(), tx, validator.StandardFeeValidation, validator.StandardScriptValidation, false)

			// then
			if tc.expectedError != nil {
				require.Error(t, actualError)
				require.ErrorContains(t, actualError, tc.expectedError.Error())
				return
			}
			require.NoError(t, actualError)
		})
	}

	t.Run("valid tx multi", func(t *testing.T) {
		// given
		// All of these transactions should pass...
		txs := []string{
			"020000000000000000ef021c2bff8cb2e37f9018ee6e47512492ee65fa2012ce6c5998b6a2e9583974dabc010000008b473044022029d0a05f2601ee89d63e7a61a8f5877f20e7a48214d3aa6e8421bb938feec8a80220785478ad3019ec91c5545199539ccfd5704021f1c962becd48e0264f7e16de86c32102207d0891b88c096f1f8503a684c387b4f9440c80707118ec14227adadd15db7820c8925e7b008668089d3ae1fc1cf450f7f45f0b4af43cd7d30b84446ecb374d6dffffffff8408000000000000fd6103a914179b4c7a45646a509473df5a444b6e18b723bd148876a9142e0fa8744508c13de3fe065d7ed2016370cc433f88ac6a4d2d037b227469746c65223a2246726f672043617274656c202331373935222c226465736372697074696f6e223a2246726f6773206d75737420756e69746520746f2064657374726f7920746865206c697a617264732e20446f20796f75206861766520776861742069742074616b65733f222c22696d616765223a22623a2f2f61353333663036313134353665333438326536306136666433346337663165366265393365663134303261396639363139313539306334303534326230306335222c226e756d626572223a313739352c22736572696573223a333639302c2273636f7265223a2235392e3131222c2272616e6b223a333033382c22726172697479223a22436f6d6d6f6e222c2261747472696275746573223a5b7b2274726169745f74797065223a224261636b67726f756e64222c2276616c7565223a225465616c204a756d626c65222c22636f756e74223a3131352c22726172697479223a22556e636f6d6d6f6e227d2c7b2274726169745f74797065223a2246726f67222c2276616c7565223a22526574726f20426c7565222c22636f756e74223a3433322c22726172697479223a22436f6d6d6f6e227d2c7b2274726169745f74797065223a22426f6479222c2276616c7565223a22507572706c6520466c616e6e656c222c22636f756e74223a36342c22726172697479223a22436f6d6d6f6e227d2c7b2274726169745f74797065223a224d6f757468222c2276616c7565223a224e6f204d6f757468204974656d222c22636f756e74223a313335382c22726172697479223a22436f6d6d6f6e227d2c7b2274726169745f74797065223a2245796573222c2276616c7565223a224f72616e676520457965205061746368222c22636f756e74223a3130332c22726172697479223a2252617265227d2c7b2274726169745f74797065223a2248656164222c2276616c7565223a2250657420436869636b222c22636f756e74223a36392c22726172697479223a22436f6d6d6f6e227d2c7b2274726169745f74797065223a2248616e64222c2276616c7565223a224e6f2048616e64204974656d222c22636f756e74223a3939322c22726172697479223a22436f6d6d6f6e227d5d7d215b80a60dc756a488066fa95b90cceec4fd731ef489d51047b41e7aa5a95bf0040000006a47304402203951e4ebccaa652e360d8b2fab2ea9936a1eec19f27d6a1d9791c32b4e46540e02202529a8af4795bcf7dfe9dbb4826bb9f1467cc255de947e8c07a5961287aa713e41210253fe24fd82a07d02010d9ca82f99870c0e5e7402a9b26c9d25ae753e40754c4dffffffff96191d44000000001976a914b522239693bae79c76208eed6fbab62b0e1fba2e88ac0544ca0203000000001976a9142e0fa8744508c13de3fe065d7ed2016370cc433f88ac8408000000000000fd6103a914179b4c7a45646a509473df5a444b6e18b723bd148876a91497e5faf26e48d9015269c2592c6e4886ac2d161288ac6a4d2d037b227469746c65223a2246726f672043617274656c202331373935222c226465736372697074696f6e223a2246726f6773206d75737420756e69746520746f2064657374726f7920746865206c697a617264732e20446f20796f75206861766520776861742069742074616b65733f222c22696d616765223a22623a2f2f61353333663036313134353665333438326536306136666433346337663165366265393365663134303261396639363139313539306334303534326230306335222c226e756d626572223a313739352c22736572696573223a333639302c2273636f7265223a2235392e3131222c2272616e6b223a333033382c22726172697479223a22436f6d6d6f6e222c2261747472696275746573223a5b7b2274726169745f74797065223a224261636b67726f756e64222c2276616c7565223a225465616c204a756d626c65222c22636f756e74223a3131352c22726172697479223a22556e636f6d6d6f6e227d2c7b2274726169745f74797065223a2246726f67222c2276616c7565223a22526574726f20426c7565222c22636f756e74223a3433322c22726172697479223a22436f6d6d6f6e227d2c7b2274726169745f74797065223a22426f6479222c2276616c7565223a22507572706c6520466c616e6e656c222c22636f756e74223a36342c22726172697479223a22436f6d6d6f6e227d2c7b2274726169745f74797065223a224d6f757468222c2276616c7565223a224e6f204d6f757468204974656d222c22636f756e74223a313335382c22726172697479223a22436f6d6d6f6e227d2c7b2274726169745f74797065223a2245796573222c2276616c7565223a224f72616e676520457965205061746368222c22636f756e74223a3130332c22726172697479223a2252617265227d2c7b2274726169745f74797065223a2248656164222c2276616c7565223a2250657420436869636b222c22636f756e74223a36392c22726172697479223a22436f6d6d6f6e227d2c7b2274726169745f74797065223a2248616e64222c2276616c7565223a224e6f2048616e64204974656d222c22636f756e74223a3939322c22726172697479223a22436f6d6d6f6e227d5d7de4d41e00000000001976a91497df51a1dea118bd689099125b42d75e48d2f5ec88ac30e51700000000001976a91484c9b30c0e3529a6d260b361f70902f962d4b77088acec93e340000000001976a914863f485dae59224cc5993b26bf50da2e7c368c8a88ac00000000",
			"010000000000000000ef01452fcd2374c548a6bac1aa76ae8efe6bde1986a8c1d67b8523eea24510769b83020000006a47304402202e032a7595a57ffd7b904814b03b971dffa62adcbb233d0eb55e0520ee385d6402205f8fbe55c1a056f5b712df4e13747dd6520d11d40760b86f22fa3e89383148834121021dc87a5ec40540d21076ecb615440eccecb36c1c6fa950f81cab6d51745ad613ffffffffc3030000000000001976a914ca5134130f26388f871071433024742449e3431688ac0396000000000000001976a91425ede77d31c4791504fd5121f70772722118744e88ac0000000000000000f5006a4cf17b0a2020202020202020202020206f7267616e697a6174696f6e3a204861737465204172636164650a202020202020202020202020636f6e746573743a204c6f73742c0a2020202020202020202020206c6576656c3a204e616e6f2c0a2020202020202020202020206576656e74547970653a20696e7075742c0a2020202020202020202020206576656e7449643a2030326665373330362d656137372d343736652d626462612d3666626134353330303061352c0a20202020202020202020202076616c75653a2036342c0a202020202020202020202020636f73743a2032313336390a202020202020202020207d7d14030000000000001976a91431302ded0a12c8c0559951ac9315685f97e592df88ac00000000",
			"010000000000000000ef018f06f2c9a3109dc1f69ab0f37a3c155a2db6928c3cc79c0270640f2571f261d1020000006a473044022013f11686546b575711b68e9194c74787f36a2028cbbab0afc974bf6ab6807f0b02207e9bc0134bca25413bd14bc84cb9316f9188a3cf49dbf9829ed9e60bb730d5d3412103b9ac16dfb008350c1a6eeb8e25c8455beab90f7cc328b0194059a6a87622139fffffffff9f030000000000001976a9142bce53f35d8bed5fce79be8140e679ce2e62e11588ac0396000000000000001976a9145721fc851ee528b2059eb7af160ffa8e511e62f388ac0000000000000000fdff00006a4cfb7b0a2020202020202020202020206f7267616e697a6174696f6e3a204861737465204172636164650a202020202020202020202020636f6e746573743a20527566662052756e6e65722c0a2020202020202020202020206c6576656c3a204e616e6f2c0a2020202020202020202020206576656e74547970653a20696e7075742c0a2020202020202020202020206576656e7449643a2065303238396363392d363137362d343666342d393430352d3763316137653538333266622c0a20202020202020202020202076616c75653a2036383934382c0a202020202020202020202020636f73743a2032313336390a202020202020202020207d7df0020000000000001976a914afdba4a0962bf2ff5e6b62580a247e8e29f97d3788ac00000000",
		}

		for txIndex, txStr := range txs {
			tx, err := sdkTx.NewTransactionFromHex(txStr)
			require.NoError(t, err, "Could not parse tx hex")
			policy := getPolicy(5)
			se := goscript.NewScriptEngine("regtest")
			btxClient := &btxMocks.ClientMock{
				CurrentBlockHeightFunc: func(_ context.Context) (*blocktx_api.CurrentBlockHeightResponse, error) {
					return &blocktx_api.CurrentBlockHeightResponse{
						CurrentBlockHeight: 10000,
					}, nil
				},
			}
			sut := New(policy, nil, btxClient, se, int32(10000))

			// when
			actualError := sut.ValidateTransaction(context.TODO(), tx, validator.StandardFeeValidation, validator.StandardScriptValidation, false)

			// then
			require.NoError(t, actualError, "Failed to validate tx %d", txIndex)
		}
	})

	t.Run("valid from file", func(t *testing.T) {
		// given
		f, err := os.Open("testdata/1.bin")
		require.NoError(t, err, "Failed to open file")
		defer f.Close()

		tx := &sdkTx.Transaction{}
		_, err = tx.ReadFrom(f)
		require.NoError(t, err, "Failed to read tx from reader")

		parentHexes := []string{
			"010000000115e8e47a1bf08cbb37513cc5f54894cae1ba8c2fbcc95213ab40bcfece140be9030000006b483045022100cc6ebfaeeb001a9148ef482a73c394f0a7b82d8c9d9e695af921015766c0f34e0220717e975e05e680463581de58d32736f427ac98eb26c4fd851b7f1d8633b98513412102efb53ff430d849a88636d90d777cb53db5dd83f8fe907a6b52662003443546aeffffffff02550c0000000000001976a9142b235c633316792ccd322bfed5ef77ffcdbabcf588ac9a020000000000001976a91405186ff0711831d110ca96ddfc47816b5a31900d88ac00000000",
		}

		for index, in := range tx.Inputs {
			parentHex := parentHexes[index]

			parentTx, err := sdkTx.NewTransactionFromHex(parentHex)
			require.NoError(t, err, "Could not parse parent tx hex")

			in.SetSourceTxOutput(parentTx.Outputs[in.SourceTxOutIndex])
		}

		policy := getPolicy(5)
		se := goscript.NewScriptEngine("regtest")
		btxClient := &btxMocks.ClientMock{
			CurrentBlockHeightFunc: func(_ context.Context) (*blocktx_api.CurrentBlockHeightResponse, error) {
				return &blocktx_api.CurrentBlockHeightResponse{
					CurrentBlockHeight: 10000,
				}, nil
			},
		}
		sut := New(policy, nil, btxClient, se, int32(10000))

		// when
		actualError := sut.ValidateTransaction(context.TODO(), tx, validator.StandardFeeValidation, validator.StandardScriptValidation, false)

		// then
		require.NoError(t, actualError, "Failed to validate tx")
	})
}

func getPolicy(satoshisPerKB uint64) *bitcoin.Settings {
	var policy *bitcoin.Settings

	_ = json.Unmarshal([]byte(testdata.DefaultPolicy), &policy)

	policy.MinMiningTxFee = float64(satoshisPerKB) / 1e8
	return policy
}

// no need to extensively test this function, it's just calling isFeePaidEnough
func TestStandardCheckFees(t *testing.T) {
	txIDbytes, err := hex.DecodeString("4a2992fa3af9eb7ff6b94dc9e27e44f29a54ab351ee6377455409b0ebbe1f00c")
	require.NoError(t, err)
	sourceTxHash, err := chainhash.NewHash(txIDbytes)
	require.NoError(t, err)
	type args struct {
		tx       *sdkTx.Transaction
		feeModel *feemodel.SatoshisPerKilobyte
	}
	tests := []struct {
		name    string
		args    args
		wantErr bool
	}{
		{
			name: "no fee being paid",
			args: args{
				tx: &sdkTx.Transaction{
					Inputs: []*sdkTx.TransactionInput{{
						SourceTXID: sourceTxHash,
						SourceTransaction: &sdkTx.Transaction{
							Outputs: []*sdkTx.TransactionOutput{{
								Satoshis: 100,
							}},
						},
					}},
					Outputs: []*sdkTx.TransactionOutput{{
						Satoshis:      100,
						LockingScript: validLockingScript,
					}},
				},
				feeModel: &feemodel.SatoshisPerKilobyte{Satoshis: 5},
			},
			wantErr: true,
		},
		{
			name: "valid fee being paid",
			args: args{
				tx: &sdkTx.Transaction{
					Inputs: []*sdkTx.TransactionInput{{
						SourceTXID: sourceTxHash,
						SourceTransaction: &sdkTx.Transaction{
							Outputs: []*sdkTx.TransactionOutput{{
								Satoshis: 150,
							}},
						},
						UnlockingScript: validLockingScript,
					}},
					Outputs: []*sdkTx.TransactionOutput{{
						Satoshis:      100,
						LockingScript: validLockingScript,
					}},
				},
				feeModel: &feemodel.SatoshisPerKilobyte{Satoshis: 5},
			},
			wantErr: false,
		},
	}
	for _, tt := range tests {
		t.Run(tt.name, func(t *testing.T) {
			if err := checkStandardFees(tt.args.tx, tt.args.feeModel); (err != nil) != tt.wantErr {
				t.Errorf("checkStandardFees() error = %v, wantErr %v", err, tt.wantErr)
			}
		})
	}
}

func TestStandardCheckFeesTxs(t *testing.T) {
	t.Run("no fee being paid", func(t *testing.T) {
		// given
		tx, err := sdkTx.NewTransactionFromHex(opReturnTx)
		require.NoError(t, err)
		sut := &feemodel.SatoshisPerKilobyte{Satoshis: 50}

		// when
		actualError := checkStandardFees(tx, sut)

		// then
		require.ErrorContains(t, actualError, ErrTxFeeTooLow.Error())
	})
}

func TestCheckScripts(t *testing.T) {
	t.Run("valid op_return tx", func(t *testing.T) {
		// given
		tx, err := sdkTx.NewTransactionFromHex(opReturnTx)
		require.NoError(t, err)

		// when
		actualError := checkScripts(tx)

		// then
		require.NoError(t, actualError)
	})

	t.Run("valid run tx", func(t *testing.T) {
		// given
		tx, err := sdkTx.NewTransactionFromHex(runTx)
		require.NoError(t, err)

		// when
		actualError := checkScripts(tx)

		// then
		require.NoError(t, actualError)
	})
}

func BenchmarkValidator(b *testing.B) {
	// extended tx
	tx, _ := sdkTx.NewTransactionFromHex("020000000000000000ef010f117b3f9ea4955d5c592c61838bea10096fc88ac1ad08561a9bcabd715a088200000000494830450221008fd0e0330470ac730b9f6b9baf1791b76859cbc327e2e241f3ebeb96561a719602201e73532eb1312a00833af276d636254b8aa3ecbb445324fb4c481f2a493821fb41feffffff00f2052a01000000232103b12bda06e5a3e439690bf3996f1d4b81289f4747068a5cbb12786df83ae14c18ac02a0860100000000001976a914b7b88045cc16f442a0c3dcb3dc31ecce8d156e7388ac605c042a010000001976a9147a904b8ae0c2f9d74448993029ad3c040ebdd69a88ac66000000")
	policy := getPolicy(500)
	se := goscript.NewScriptEngine("regtest")
	btxClient := &btxMocks.ClientMock{
		CurrentBlockHeightFunc: func(_ context.Context) (*blocktx_api.CurrentBlockHeightResponse, error) {
			return &blocktx_api.CurrentBlockHeightResponse{
				CurrentBlockHeight: 10000,
			}, nil
		},
	}
	sut := New(policy, nil, btxClient, se, int32(10000))

	for i := 0; i < b.N; i++ {
		_ = sut.ValidateTransaction(context.TODO(), tx, validator.StandardFeeValidation, validator.StandardScriptValidation, false)
	}
}

func TestFeeCalculation(t *testing.T) {
	// given
	tx, err := sdkTx.NewTransactionFromHex("010000000000000000ef03778462c25ddb306d312b422885446f26e3e0455e493a4d81daffe06961aae985c80000006a473044022001762f052785e65bc38512c77712e026088caee394122fe9dff95c577b16dfdf022016de0b27ea5068151ed19b9685f21164c794c23acdb9a407169bc65cb3bb857b412103ee7da140fd1e2385ef2e8eba1340cc87c55387f361449807eb6c15dcbb7f1109ffffffff7bd53001000000001976a9145f2410d051d4722f637395d00f5c0c4a8818e2d388ac7a629df9166996224ebbe6225388c8a0f6cbc21853e831cf52764270ac5f37ec000000006a473044022006a82dd662f9b21bfa2cd770a222bf359031ba02c72c6cbb2122c0cf31b7bd93022034d674785bd89bf5b4d9b59851f4342cc1058da4a05fd13b31984423c79c8a2f412103ee7da140fd1e2385ef2e8eba1340cc87c55387f361449807eb6c15dcbb7f1109ffffffffd0070000000000001976a9145f2410d051d4722f637395d00f5c0c4a8818e2d388ac7a629df9166996224ebbe6225388c8a0f6cbc21853e831cf52764270ac5f37ec010000006b483045022100f6340e82cd38b4e99d5603433a260fbc5e2b5a6978f75c60335401dc2e86f82002201d816a3b2219811991b767fa7902a3d3c54c03a7d2f6a6d23745c9c586ac7352412103ee7da140fd1e2385ef2e8eba1340cc87c55387f361449807eb6c15dcbb7f1109ffffffff05020000000000001976a9145f2410d051d4722f637395d00f5c0c4a8818e2d388ac0b1e000000000000001976a91498a2231556226331b456cd326f9085cbaff6240288ac1e000000000000001976a91498a2231556226331b456cd326f9085cbaff6240288ac1e000000000000001976a91498a2231556226331b456cd326f9085cbaff6240288ac1e000000000000001976a91498a2231556226331b456cd326f9085cbaff6240288ac1e000000000000001976a91498a2231556226331b456cd326f9085cbaff6240288ac1e000000000000001976a91498a2231556226331b456cd326f9085cbaff6240288ac1e000000000000001976a91498a2231556226331b456cd326f9085cbaff6240288ac1e000000000000001976a91498a2231556226331b456cd326f9085cbaff6240288ac1e000000000000001976a91498a2231556226331b456cd326f9085cbaff6240288ac1e000000000000001976a91498a2231556226331b456cd326f9085cbaff6240288acfbdd3001000000001976a9145f2410d051d4722f637395d00f5c0c4a8818e2d388ac00000000")
	require.NoError(t, err)
	policy := getPolicy(50)
	se := goscript.NewScriptEngine("regtest")
	btxClient := &btxMocks.ClientMock{
		CurrentBlockHeightFunc: func(_ context.Context) (*blocktx_api.CurrentBlockHeightResponse, error) {
			return &blocktx_api.CurrentBlockHeightResponse{
				CurrentBlockHeight: 10000,
			}, nil
		},
	}
	sut := New(policy, nil, btxClient, se, int32(10000))

	// when
	err = sut.ValidateTransaction(context.TODO(), tx, validator.StandardFeeValidation, validator.StandardScriptValidation, false)

	// then
	t.Log(err)
}

func TestNeedExtension(t *testing.T) {
	tcs := []struct {
		name           string
		txHex          string
		feeOpt         validator.FeeValidation
		scriptOpt      validator.ScriptValidation
		expectedResult bool
	}{
		{
			name:           "raw hex - expect true",
			txHex:          testdata.TX1RawString,
			feeOpt:         validator.StandardFeeValidation,
			scriptOpt:      validator.StandardScriptValidation,
			expectedResult: true,
		},
		{
			name:           "ef hex - expect false",
			txHex:          "020000000000000000ef010f117b3f9ea4955d5c592c61838bea10096fc88ac1ad08561a9bcabd715a088200000000494830450221008fd0e0330470ac730b9f6b9baf1791b76859cbc327e2e241f3ebeb96561a719602201e73532eb1312a00833af276d636254b8aa3ecbb445324fb4c481f2a493821fb41feffffff00f2052a01000000232103b12bda06e5a3e439690bf3996f1d4b81289f4747068a5cbb12786df83ae14c18ac02a0860100000000001976a914b7b88045cc16f442a0c3dcb3dc31ecce8d156e7388ac605c042a010000001976a9147a904b8ae0c2f9d74448993029ad3c040ebdd69a88ac66000000",
			feeOpt:         validator.StandardFeeValidation,
			scriptOpt:      validator.StandardScriptValidation,
			expectedResult: false,
		},
		{
			name:           "raw hex, skip fee and script validation - expect false",
			txHex:          testdata.TX1RawString,
			feeOpt:         validator.NoneFeeValidation,
			scriptOpt:      validator.NoneScriptValidation,
			expectedResult: false,
		},
	}

	for _, tc := range tcs {
		t.Run(tc.name, func(t *testing.T) {
			// given
			tx, _ := sdkTx.NewTransactionFromHex(tc.txHex)

			// when
			actualResult := needsExtension(tx, tc.feeOpt, tc.scriptOpt)

			// then
			require.Equal(t, tc.expectedResult, actualResult)
		})
	}
}

func TestGetUnminedAncestors(t *testing.T) {
	txMap := map[string]*sdkTx.Transaction{
		fixture.ParentTxID1:              fixture.ParentTx1,
		fixture.AncestorTxID1:            fixture.AncestorTx1,
		fixture.AncestorOfAncestorTx1ID1: fixture.AncestorOfAncestor1Tx1,
	}
	tx := fixture.ValidTx

	tcs := []struct {
		name                   string
		feeModel               *feemodel.SatoshisPerKilobyte
		mempoolAncestors       []string
		getMempoolAncestorsErr error

		expectedTxSet map[string]*sdkTx.Transaction
		expectedErr   error
	}{
		{
			name: "no unmined ancestors - valid fee",
			feeModel: func() *feemodel.SatoshisPerKilobyte {
				return &feemodel.SatoshisPerKilobyte{Satoshis: 1}
			}(),
			mempoolAncestors: []string{},
			expectedTxSet:    map[string]*sdkTx.Transaction{},
		},
		{
			name: "cumulative fees sufficient",
			feeModel: func() *feemodel.SatoshisPerKilobyte {
				return &feemodel.SatoshisPerKilobyte{Satoshis: 1}
			}(),
			mempoolAncestors: []string{fixture.AncestorTxID1},
			expectedTxSet:    map[string]*sdkTx.Transaction{"147a55659a647b9931d8d4797dfbdd2ca8d34e56940e2463f818e8801e3ff003": fixture.AncestorTx1},
		},
		{
			name: "failed to get mempool ancestors",
			feeModel: func() *feemodel.SatoshisPerKilobyte {
				return &feemodel.SatoshisPerKilobyte{Satoshis: 5}
			}(),
			getMempoolAncestorsErr: errors.New("some error"),

			expectedErr: ErrFailedToGetMempoolAncestors,
		},
	}

	for _, tc := range tcs {
		t.Run(tc.name, func(t *testing.T) {
			// given
			txFinder := &mocks.TxFinderIMock{
				GetMempoolAncestorsFunc: func(_ context.Context, _ []string) ([]string, error) {
					return tc.mempoolAncestors, tc.getMempoolAncestorsErr
				},
				GetRawTxsFunc: func(_ context.Context, _ validator.FindSourceFlag, ids []string) []*sdkTx.Transaction {
					rawTxs := make([]*sdkTx.Transaction, len(ids))
					for i, id := range ids {
						rawTx, ok := txMap[id]
						if !ok {
							t.Fatalf("tx id %s not found", id)
						}
						rawTxs[i] = rawTx
					}

					return rawTxs
				},
			}

			actualTxSet, actualError := getUnminedAncestors(context.TODO(), txFinder, tx, false)

			// then
			if tc.expectedErr != nil {
				require.ErrorIs(t, actualError, tc.expectedErr)
				return
			}

			require.NoError(t, actualError)
			require.Equal(t, tc.expectedTxSet, actualTxSet)
		})
	}
}

func TestCheckCumulativeFees(t *testing.T) {
	tt := []struct {
		name                string
		tx                  *sdkTx.Transaction
		feeModel            *feemodel.SatoshisPerKilobyte
		txString            string
		ancestorTxSetString map[string]string

		expectedErr       error
		expectedErrString string
	}{
		{
			name: "chained txs - cumulative fee sufficient",
			ancestorTxSetString: map[string]string{"88c7b4f34fe57762c2f4897f40d371460c10c8cce0a88ba45fd13ece5f7ee73e": "010000000000000000ef0136a6e3c2d1822ce4f716a4232f3e1e58e575497cd04bdb0426b34d2de5f56950000000006a473044022010403b51e0c5b4335fb28483b0e3805eda7fdbd6eb53fede4e901c2db949f6c30220446bbf6a5d68d904f267f6ac93165d1fe7ad4dc3f8a47976b74f33efc157c80141210207f8079c8aea3197bdb0c3cc55757076931461853b5973a20bea9c68457d2457fffffffff8240100000000001976a914b9a45a7ebbbbebf93bc9fe9e7eb36daf5fc277ec88ac04204e0000000000001976a914feb9fdc7373775c8394fe776653090cafc09d82f88ac10270000000000001976a9143cc9d7e15b7b5ac3daae45dcd146deca380da95088acb80b0000000000001976a9143f4ffc7d7b1903b01b521d2f673cedca4f593a3588ac0fa40000000000001976a914158ef65fec41d6c7bbcfc09916ea594767c2dfcb88ac00000000",
				"b3c5a7048a4d149666766d8281d3d54b347ae7802a1a9941a0797d673300d5fd": "010000000000000000ef015339f0fa4937e7282faa88bafcf5dcccdc81ccef80066b279427b78f7d4c73a7010000006a47304402203023167b537c11a9c9394027e23b63d93b45ebf65b0fb88c4417e8c9ce77f33d022061d0401462f98a77a0cd54a30526d7c5fbda5dd79e079a19899dbc324936128541210360a71004d9304e841139ef4fd0199cd6ca4b23982e7e22cc26790eaf41f9b1b2fffffffff9870500000000001976a91429b35c8345fc59ec01b279bf0fd2d231dcc5267a88ac03f8240100000000001976a9141c968e8ca2f47871b8544569e584eaf6d35a0e7488ac76310200000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ac8a310200000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ac00000000"},
			txString: txString,
			feeModel: &feemodel.SatoshisPerKilobyte{Satoshis: 1},
		},
		{
			name:                "chained txs - cumulative fee too low",
			ancestorTxSetString: txSetChain,
			txString:            txString,
			feeModel:            &feemodel.SatoshisPerKilobyte{Satoshis: 1},

			expectedErrString: "minimum expected cumulative fee: 31, actual cumulative fee: 21",
			expectedErr:       ErrTxFeeTooLow,
		},
		{
			name:                "no ancestors",
			ancestorTxSetString: txSetChain2,
			txString:            txString2,
			feeModel:            &feemodel.SatoshisPerKilobyte{Satoshis: 1},
		},
	}

	for _, tc := range tt {
		t.Run(tc.name, func(t *testing.T) {
			ancestorTxSet := map[string]*sdkTx.Transaction{}

			for key, value := range tc.ancestorTxSetString {
				newTx, err := sdkTx.NewTransactionFromHex(value)
				require.NoError(t, err)

				ancestorTxSet[key] = newTx
			}

			tx, err := sdkTx.NewTransactionFromHex(tc.txString)
			require.NoError(t, err)

			vErr := checkCumulativeFees(context.TODO(), ancestorTxSet, tx, tc.feeModel, false)

			if tc.expectedErr != nil {
				require.NotNil(t, vErr)
				require.ErrorIs(t, vErr.Err, tc.expectedErr)
				require.ErrorContains(t, vErr.Err, tc.expectedErrString)
				return
			}

			require.Nil(t, vErr)
		})
	}
}

var (
	txString2   = "010000000000000000ef01600bc10a6670f7d6cbdf13a09723b3cd457729b41a140cd9c5f33b5ed6b40321050000006b483045022100b22ef92b7e65679f9e600a6a3a6cb74344de7cddc853d03e332f624dae10ca87022003923c7d751024349696571f8f505ae307c33ed345f675c60ce45849898bc700412102ac8a4355a58d304c538c58a7d7bdac2625da890260b55fbe253ecb5e984bf9d3ffffffff5db33100000000001976a9147cce185ed5e564e05ddcb840b5dfd7c4f0123d8188ac0880841e00000000001976a91497210b6f039c8639d898e433e271b1131661ca3b88ac20a10700000000001976a914e9815429b6259d2eabfbbdda22beb6162056266788ac400d0300000000001976a914ddebdad02e2acd0b103e8357278bb7899841774488ac400d0300000000001976a914d95e735c60ba49f00e79d2eb12c685516b4623b988ac50c30000000000001976a9147411226d248787ef1beb936c170585ad37ac69a788ac204e0000000000001976a91405053c4aa32b78a943ac8b939cba6854ff97bdb888ac2c010000000000001976a914ba66d2a55919d4bd0b033e2dd830b9818c2ec1c588ac715f0400000000001976a9144a91275575e3d7e6f2d7bb42618dfccb3c225f5388ac00000000"
	txSetChain2 = map[string]string{}

	txString   = "010000000000000000ef014d576b0afb43187212360592d12dd04f63b6147d9aec39c01d5638c390d91a4d020000006a4730440220460d4b28667e6a126e3bd88056bed4e4c45077a2ae435812d577606a4d15575c0220650aecfe1483a839ef1c0ac1a0566914b44cb19692fa78541f71607873731cc54121035c14baa37bcb08808d2e384f4695a50e7db3f472f6655cc23baee855c8a0f240ffffffff77690000000000001976a914b35e5c4f05976458be36d78d7a20149f51507e3e88ac03204e0000000000001976a9145394dfb37952a362598e815e89c44d877a2b53e288aca00f0000000000001976a914a6771db04fb78fe0845311800a53ab9c0a44d8b388acb60b0000000000001976a9149b48f6e263a505930f1e6fdc157c9771492786c588ac00000000"
	txSetChain = map[string]string{
		"7cc40d25faf0625d0aa548c5e8c96d5dce7d22bdbf4b5f313f33b2a1fca81d30": "010000000000000000ef017d4ad8a21caf35335187dbe6336ead2582b77405ca95ea3e86f9a376ac36428e010000006a473044022042b31adde0ac3bcb02d0434521073d34729fcfc41b8b4846ad75549f7eae5e3802204f5673cb0089d0b7475caa316ccd8b23ea654987c44e0cedffe52797b16a689f4121030ad8bb821c95c09afcb1095ba1e5daecac233b4c7accf9a5d645185fadbe4cfcffffffff7b920000000000001976a9144cbce37df1fe2e2692010b47c2f42dcd8069b5b888ac02e4570000000000001976a9142b6bdd30e74ce66a48839237e8e92b6e79faa94888ac963a0000000000001976a914566e38ba79db2e6f59d9c63399b15e5729d02ffa88ac00000000",
		"9bc38c17da3e275178d1c796194e4453aad4d74f76847bc3cdb66f3df4ff2b77": "010000000000000000ef049e10f72baabe0aeb2128482456bfb882c929eb9441ca0632f8a76202e6c18765010000006b483045022100f79db803ffb0c988a986e3b086ec6ff021f1ccf0ccfef14398a7afebad5392bd02206741288739403ba7cd92d0773012df4cf366589fca64c735e553173d0a5c832541210265a7cb93ac0b3088d18af114854ddeb25e31b41a71339c7e88ffc88c7d9ad78affffffff97280000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac9e10f72baabe0aeb2128482456bfb882c929eb9441ca0632f8a76202e6c18765020000006b483045022100d8b83572efdac780864b9571233609a42d1265c881cb65e7cb5359a4ea317266022037627f2895f91861e9d4b9b09d2d6d7a4e42f294fcbec66736993f1f45e89ab541210265a7cb93ac0b3088d18af114854ddeb25e31b41a71339c7e88ffc88c7d9ad78affffffffab280000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac2bad7d6fe367696b927b221ef16983f14432f24da43b396503b1035ee1ff9995010000006a47304402202d5f10e5da1ff4dbe3ca4cdd7100511c9ce8adc899e138b448076f4e7aa4c15b022022e0ad041da9ce46f6c78eeb9c1c594cd39901fac3ec17786f242895e2af9a3441210265a7cb93ac0b3088d18af114854ddeb25e31b41a71339c7e88ffc88c7d9ad78affffffff34860000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688acada6ccdf4b285a406e7478e2d1e64b64712863b41458c3c188d90ed73551e685010000006a47304402203691681a8203ad30d6897765360a3813f32925bbfe3060c7dd5f8fc1dd5851c002206fa1a6e9ea40aa4334fccc043d7f686a655bcc7924e446de136b950772cff31e41210265a7cb93ac0b3088d18af114854ddeb25e31b41a71339c7e88ffc88c7d9ad78affffffff39860000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac02f8240100000000001976a9148e55e19306521b1925853d5df0f8fbc3e155b87388acb6380000000000001976a914fd0d93743a6233bce87968f581bca17c09f2ad2b88ac00000000",
		"0a2aa3d468013b65208223f3c4a2bbad6137eb2ca4b843af3ea015f09e36abb3": "010000000000000000ef04f9ccbcc9b3b248872295edd4f463a66028a3a82d2b0eaf355f2156d56f3bbc1e010000006a47304402206b9252446c0c40beadf46fdbbe48074cf15f3d69f88601328dff70cac84328250220050256df5e8913ed9b781fcc2d050b9a064878cc65f9770615539a1bd18cfa65412102a6449568536e8f31e5a3f3f22018ff58e0970ff26e8f9b3bc0fe58e391e51ed3ffffffff4b1e0000000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ac2b7990d27b100320b7c6a51bafd815fd21414fb1db038b0e63d35a3cc8147868020000006a4730440220764e985b60e03e932e6d68970a70346d08d80d47ec1176589efa0d47aaf87d6102204b6fb508cb62432c43a06d212a84ba3b60d7a8aefb99ffac4f00b39bdea2447041210265a7cb93ac0b3088d18af114854ddeb25e31b41a71339c7e88ffc88c7d9ad78affffffff164e0000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac301da8fca1b2333f315f4bbfbd227dce5d6dc9e8c548a50a5d62f0fa250dc47c000000006a47304402201ff1233583048e0bb5ef8f7676fe0d776d774036ef69ea0c0096cf5e6173d58f0220178b92c801c7105b786cb165f0c61b8e91b1a35ac1c984668587e4babfcd0f1d412102ed226031b4e89b348bc641ce07c9589f3fc87d7bc9ea75a0d93edcf3370260d9ffffffffe4570000000000001976a9142b6bdd30e74ce66a48839237e8e92b6e79faa94888ac9c2e2c9dcd8bfe1c3d4252cfff22e1f18fd3ff6074efe94ec92fe49527cafdb5000000006a473044022005966cb1feced76e593a881b08e9771c42a017b13311e357e4bac8e00cd94bd602206f514d5941cc00528bb21dc258e6d0f164b60a23db46dc5ac8a3e27773f81717412102ed226031b4e89b348bc641ce07c9589f3fc87d7bc9ea75a0d93edcf3370260d9ffffffff7c920000000000001976a9142b6bdd30e74ce66a48839237e8e92b6e79faa94888ac02f8240100000000001976a914e8fc63df35216a12bb8bfafc1eda1f84e81b5c6688acc8310000000000001976a9141d3c80e5da9da1d88db1717727f36aa0855850c388ac00000000",
		"8e4236ac76a3f9863eea95ca0574b78225ad6e33e6db87513335af1ca2d84a7d": "010000000000000000ef01772bfff43d6fb6cdc37b84764fd7d4aa53444e1996c7d17851273eda178cc39b000000006b48304502210098bf21c173083f704f5fb1365321eb7bf97f3a3adaf52689b2435d5966d500ee0220674ecb9eee84b320513833d633233fad1a61761625312b3add7fa2c13bc3a59d412102cae0f4cbbb40f44bbf23beab05df20fba9b041f53d5faae3edd30211fac0f4f8fffffffff8240100000000001976a9148e55e19306521b1925853d5df0f8fbc3e155b87388ac027c920000000000001976a9147b4271ce41833ac273ce8167859bf7fa168492e888ac7b920000000000001976a9144cbce37df1fe2e2692010b47c2f42dcd8069b5b888ac00000000",
		"88c7b4f34fe57762c2f4897f40d371460c10c8cce0a88ba45fd13ece5f7ee73e": "010000000000000000ef0136a6e3c2d1822ce4f716a4232f3e1e58e575497cd04bdb0426b34d2de5f56950000000006a473044022010403b51e0c5b4335fb28483b0e3805eda7fdbd6eb53fede4e901c2db949f6c30220446bbf6a5d68d904f267f6ac93165d1fe7ad4dc3f8a47976b74f33efc157c80141210207f8079c8aea3197bdb0c3cc55757076931461853b5973a20bea9c68457d2457fffffffff8240100000000001976a914b9a45a7ebbbbebf93bc9fe9e7eb36daf5fc277ec88ac04204e0000000000001976a914feb9fdc7373775c8394fe776653090cafc09d82f88ac10270000000000001976a9143cc9d7e15b7b5ac3daae45dcd146deca380da95088acb80b0000000000001976a9143f4ffc7d7b1903b01b521d2f673cedca4f593a3588ac0fa40000000000001976a914158ef65fec41d6c7bbcfc09916ea594767c2dfcb88ac00000000",
		"b3c5a7048a4d149666766d8281d3d54b347ae7802a1a9941a0797d673300d5fd": "010000000000000000ef015339f0fa4937e7282faa88bafcf5dcccdc81ccef80066b279427b78f7d4c73a7010000006a47304402203023167b537c11a9c9394027e23b63d93b45ebf65b0fb88c4417e8c9ce77f33d022061d0401462f98a77a0cd54a30526d7c5fbda5dd79e079a19899dbc324936128541210360a71004d9304e841139ef4fd0199cd6ca4b23982e7e22cc26790eaf41f9b1b2fffffffff9870500000000001976a91429b35c8345fc59ec01b279bf0fd2d231dcc5267a88ac03f8240100000000001976a9141c968e8ca2f47871b8544569e584eaf6d35a0e7488ac76310200000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ac8a310200000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ac00000000",
		"22189f8802cd9a1dc1d20e33a2ac246ed1a475ac9cce2bfade252086b904df84": "010000000000000000ef044e3074dd9ea797e34c6980eaf6bab604f22f155cee77ecaebd5b5467f1d9da16010000006b483045022100fa2b9f04e20c71f8cb520ddb89126ce32226f76c33acdc790089dc629e7cfe13022062a625ee967bacd8ccf49fc4e7f88d3b079baa875f78aa00d057a49a2d0f27ec412102a6449568536e8f31e5a3f3f22018ff58e0970ff26e8f9b3bc0fe58e391e51ed3ffffffff8d3a0000000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ac4e3074dd9ea797e34c6980eaf6bab604f22f155cee77ecaebd5b5467f1d9da16020000006b483045022100fb455c0f605771f0518b4eea4b8a5ad45e1a39c4d3f15162473b6befbfa96e1b02201665d3b47b01745cbaef5c7686ef6c6f10588c213beb03e1e94e6e606583b45c412102a6449568536e8f31e5a3f3f22018ff58e0970ff26e8f9b3bc0fe58e391e51ed3ffffffffa23a0000000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988acfb17e9ec6c038b8be519bde4531c114e504912063ff79838576ec0435ebe238b010000006b483045022100e60c2e5378cd80d3abcb65d0af503784abb1f203ee1a5b3a25b111e398199bb902202b6db7544b3c2aa4f4208ab68ca1e3d4a79a34d49ad11dc6e46e7648ae8b878b4121023802ceada489c20955b4f08b9aceb6f1a96798bb1862cb0b08fba35176dfbb9dffffffff088e0000000000001976a91434c37666833faf4968fb5b4e0aef417e59bbd3ca88acfb17e9ec6c038b8be519bde4531c114e504912063ff79838576ec0435ebe238b020000006b483045022100f9f0b6c5ea3ce7cffd668f806ad24a3069e833407153f6c678f9de0623d15058022043a54b4010603e3405b8ffda937b4cfc3fa77f9454e310c270e7458835b2514d4121023802ceada489c20955b4f08b9aceb6f1a96798bb1862cb0b08fba35176dfbb9dffffffff1d8e0000000000001976a91434c37666833faf4968fb5b4e0aef417e59bbd3ca88ac03f8240100000000001976a91423384a3a77ddeb844b3a966c201f21fb206a559988ac23360000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac38360000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac00000000",
		"75a0f90c2c910174f58ce85926fe2c295f7ffb262cd3b68cc8426f3a5c02d02d": "010000000000000000ef0484df04b9862025defa2bce9cac75a4d16e24aca2330ed2c11d9acd02889f1822010000006b483045022100f6e7c15234a19d62f67405bcd82add0364aa9b9fb30ca5cdc4acdad8f37550f602204965be300b66f39753ef9d371a72bbcf6d3867463a7754db6c3e7e7ab7107ccb41210265a7cb93ac0b3088d18af114854ddeb25e31b41a71339c7e88ffc88c7d9ad78affffffff23360000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac84df04b9862025defa2bce9cac75a4d16e24aca2330ed2c11d9acd02889f1822020000006b4830450221008e78169974801b94fce2c112477d040246b341661e8c5c09e295b8943b3c10e202207bb5eeb32af34fc8c521b355493dde6e7ba34fdd438db70d8b53da56bf6a89ba41210265a7cb93ac0b3088d18af114854ddeb25e31b41a71339c7e88ffc88c7d9ad78affffffff38360000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ace31f724cd3183cf519f642625fdecf22207760247f0b3e206f3063185b8fc375000000006a473044022019dbf2608b551116d584d23999683f7d6dac6b6c36223941aab767e5dd4baf9c02202bfc4461986d84955dda0833fe549cf8eca2bb876ef869c604f760ff648e1b32412102f964a3c0a4a6b4d0983c4e39717a65796b525341c7cf39b0883aeedcfafd9da3ffffffff7c920000000000001976a9149aae8823f12f553dc947ffc555fb57b35437298f88ac5172759b8fcdc9779c75ab7f7f07bb0c30b557027ab3228c3d579173e94ed9b7000000006b483045022100902be3c937ff582c1bb1f04f8dcfb257fe43bb2342e18e57ba5ee469f15441f6022067a6adf8c0a66d2e08ff1a9bbe1bc3dd4b77341aa0d569f4877cd9cbecbc23404121029e9cd1d7158a33121654f0f26a7ee4ebed75407c77cc6bafdeb010d89df78958fffffffff8240100000000001976a9147b4271ce41833ac273ce8167859bf7fa168492e888ac03f8240100000000001976a9144fc124260f302fb5a310b0cde52e47c551e5f03c88ac617f0000000000001976a9141d3c80e5da9da1d88db1717727f36aa0855850c388ac757f0000000000001976a9141d3c80e5da9da1d88db1717727f36aa0855850c388ac00000000",
		"a20f9076d0c4fddf932d45d2a1e841148e37bd668751e2843c9f0ba1f29fc0f0": "010000000000000000ef03b3ab369ef015a03eaf43b8a42ceb3761adbba2c4f3238220653b0168d4a32a0a010000006a473044022057e4da13d99b1c5af7f1b0a987e1683a26715ee9c13c359b29adecdf2bcc871a02206c716823fdedf4c3a6b0c18be673fd56fca3c6a3d0dac1b3a781500130cb9ae1412103bc36dcb85a107589b1558d77f721453156f7363e526b59c8d8387491e89cb421ffffffffc8310000000000001976a9141d3c80e5da9da1d88db1717727f36aa0855850c388ac856454778190083bd320a5a8fa0c97ff5136cde70b406b620ee8dda5c5599842000000006b4830450221008668c2c676617f11b379ea9a7983555f386e93029e843837d41143ea9e00b128022011f27c89cb47049be7419ef4a8d25bd44b7984b07566c42bbe28550968ccb9a6412102e2e1ba788a158ed79e1ec26f5049f37cd5e10d9fbad89d220550bdbbf6c91054ffffffff7c920000000000001976a914171af9ee46b2b9058cfb120be5a3ff636faa926a88ac05420483c28ce6be764a486b707a4c619d2c720ae7a9187d775fb6a50a1e0965000000006a4730440220320177ae16eca774c4b0adbf1cfb6db70177411d9c26a84e4a0c1bb0c72bfa3c0220081876d9f3148612bcb2919b7ef095342381467bec2ded8bc67ebcd8a51e5a004121024b470be5f22458027a7d9c132a2d0621c3d7f21a04f4f4e1484b98c98d766072ffffffff7c920000000000001976a914a439cefd0f4281a3099fca842aab4873a974b30688ac02f8240100000000001976a914b9a45a7ebbbbebf93bc9fe9e7eb36daf5fc277ec88acc7310000000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ac00000000",
		"85e65135d70ed988c1c35814b4632871644be6d1e278746e405a284bdfcca6ad": "010000000000000000ef0166969167daeaae7776316a0bf5bef12bebcc9f58094fa42b0963a2ed75ef61d6010000006b483045022100d06a87ba47b4dc1cf1448d11b22e45c8d493149b39a2d61de9b44d0e17f8713b0220133edb6eb7cf7bbeccd262b6d0daf64172f4204e52c5b8cf681f1fbf594820ee41210306bda1013d573dd868a14bd605a2deab8cdeb09edcb6bf6c0809052c0399ea1effffffff80310200000000001976a914fd0d93743a6233bce87968f581bca17c09f2ad2b88ac03f8240100000000001976a91445d17ab2fe29cc038a2688592e54567f93ec522f88ac39860000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac4e860000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac00000000",
		"f142c014bec539d75cd3887ad758f4e535e423c5dbed51a227af1c9ee43b13e1": "010000000000000000ef032dd0025c3a6f42c88cb6d32c26fb7f5f292cfe2659e88cf57401912c0cf9a075010000006b483045022100c901f8bdec3f683f234969758e5c01d740e06e812230c76248d75810bbc760b002204bf18c5f02bc022578beef0b7071e97942ba08dae1fdae859e6bafdef87c4111412103bc36dcb85a107589b1558d77f721453156f7363e526b59c8d8387491e89cb421ffffffff617f0000000000001976a9141d3c80e5da9da1d88db1717727f36aa0855850c388ac2dd0025c3a6f42c88cb6d32c26fb7f5f292cfe2659e88cf57401912c0cf9a075020000006a473044022031a935fcf4a9961ad9f704a72cf7d0139b9e874be53caeb65a8b0b233ff4077002203842acfd3c210d26fabb9486dbc2d11396f05966b20fed18f0fe2e18b1bf4cbb412103bc36dcb85a107589b1558d77f721453156f7363e526b59c8d8387491e89cb421ffffffff757f0000000000001976a9141d3c80e5da9da1d88db1717727f36aa0855850c388ac2b3d8ca57dfb2d65a32fcb01328133891e9d08debfcb8823be5acaea9b2d750e000000006b483045022100c1903e943488af6f5394b2fb81b33c1d1b64c52fa87097aa5b31704eaf79dbfd02201232074cbc3bedc1a148147976dd67f88b220c4ab2608c3feccd47703aa4084e412103cb455a9276eea85e54cebea783a6b46c16177dd750b48afad2e46d3aef0bb57dffffffff7c920000000000001976a914a21adc5b90591829d0a3d206c7ad23edc55d6cde88ac03f8240100000000001976a9144fc124260f302fb5a310b0cde52e47c551e5f03c88ac22360000000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ac37360000000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ac00000000",
		"a7734c7d8fb72794276b0680efcc81dcccdcf5fcba88aa2f28e73749faf03953": "010000000000000000ef0117b242e5f36422e55624693cf22eaaec4ca20f4cad9bf69df6f4c34208bfd290000000006b483045022100b7fdc4e9877f9ba1bfc39d3100441bf481f1ff8c0bbf2d0ebb3b21d4604fd7aa0220330b851bd085024ffb1707cd0bb7fcd4d0f45071f6b7850f3b64785c762a59134121024b470be5f22458027a7d9c132a2d0621c3d7f21a04f4f4e1484b98c98d766072ffffffff00350c00000000001976a914a439cefd0f4281a3099fca842aab4873a974b30688ac03f8240100000000001976a9144fc124260f302fb5a310b0cde52e47c551e5f03c88acf9870500000000001976a91429b35c8345fc59ec01b279bf0fd2d231dcc5267a88ac0e880500000000001976a91429b35c8345fc59ec01b279bf0fd2d231dcc5267a88ac00000000",
		"1565706d7d9e14a741e9b6a66d742c55ae662e75665b566b5975bed1d77d192f": "010000000000000000ef03f0c09ff2a10b9f3c84e2518766bd378e1441e8a1d2452d93dffdc4d076900fa2010000006a47304402203d7338184437e5e60ae19d3f1a10c1ac435cd58e123c34296513d4b5e4a5a16b02203767e0d87b26cb44067d4d762a43fa787fad72b1cd8ffe560c194ce854e5dfc9412102a6449568536e8f31e5a3f3f22018ff58e0970ff26e8f9b3bc0fe58e391e51ed3ffffffffc7310000000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988aca89bb4ffc530128d5151b8c83eb1982d6d2e2841d1b6772361cd439ca962371a000000006b483045022100e7cfbe350b73b98185cb5a564e00904ba22445ac60211ee64aeb73232315f23e02206cd522cbfbafb2c9f048efe74437b2f82166dd17359029c919361b1a294b87e44121029e9cd1d7158a33121654f0f26a7ee4ebed75407c77cc6bafdeb010d89df78958ffffffff7c920000000000001976a9147b4271ce41833ac273ce8167859bf7fa168492e888ac710f3f65dbca311620bb13ffa84f1473393436b9796cb2d5a21aae39a706d20e000000006b483045022100dac245d22a58bc1ba9b7bdbd2290ce8b22d368ee87bff2030d5c490b24b81d23022043554b51ff1c23a2c33bfdb844063db76fb4c14e3df02cc425a3ca9ccbeeea4d4121027b7ca9e7a9df1c7cb3db3f1c383b41606bafe546d933e978fec383b6e650ff4afffffffff8240100000000001976a914723494e7c601496c69a24ac2820423b269a3e4d988ac03f8240100000000001976a914232e04305a975c649e667cb4ba546d3db18791a288ac17620000000000001976a91434c37666833faf4968fb5b4e0aef417e59bbd3ca88ac2b620000000000001976a91434c37666833faf4968fb5b4e0aef417e59bbd3ca88ac00000000",
		"4d1ad990c338561dc039ec9a7d14b6634fd02dd192053612721843fb0a6b574d": "010000000000000000ef013ee77e5fce3ed15fa48ba8e0ccc8100c4671d3407f89f4c26277e54ff3b4c788030000006a47304402205192cb2480b3cc2a69bcc6ec90bcf0394542f55906fda1ba7046ab5c558802e002202241c75b453c2e998425ddd0f1617069c72f800b9eb7086f2e4034d01ad2ada2412103829143778745570f81ff5e5273ba25e1b22498ab19ca5bb5826a3b1616e215deffffffff0fa40000000000001976a914158ef65fec41d6c7bbcfc09916ea594767c2dfcb88ac0310270000000000001976a9147a0706bd7ff7e7df12597140a5a94412c212671c88ac87130000000000001976a91473bfff78d94375dde35c480c04866d5eb2d8eeaf88ac77690000000000001976a914b35e5c4f05976458be36d78d7a20149f51507e3e88ac00000000",
		"5fc747abbd9c4c11b45c98322bbf9f560aa6d5500e46f896d053b2b5bb4c6cf8": "010000000000000000ef04e1133be49e1caf27a251eddbc523e435e5f458d77a88d35cd739c5be14c042f1010000006b483045022100be7f201a9807e526dbf32e8c875a3a971e8610d631113153c3da34692651596e02205ae8b468f2c50054a003556986a411c709baca96d6c48735c59f191331c2c4b8412102a6449568536e8f31e5a3f3f22018ff58e0970ff26e8f9b3bc0fe58e391e51ed3ffffffff22360000000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ace1133be49e1caf27a251eddbc523e435e5f458d77a88d35cd739c5be14c042f1020000006a473044022026311ebd92493da4e83602239fbffec7ba118f0e966b6d62cf46cf4419bbe40e02207f15bfca6b989b4d8223fd851eba69d6e696f22daef19849364be7d75bc6cadd412102a6449568536e8f31e5a3f3f22018ff58e0970ff26e8f9b3bc0fe58e391e51ed3ffffffff37360000000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988aca24b0738dfc9c8927956505158cc747222cb326b22c7cab02721ece5b9d9188a000000006a47304402201b1bea6cd41f8ea074a9ab7534ebb2d6ad4d6485f369fd5defd968e1bc84b774022040a1c2c7f6a1a259e5fb282aaf09185ff60397f66b5b735efd8b8a93df080f4b4121021db5f0cd13683015cb7305b6bb8c8ff27d7cf900b01d0d7e52ca175a785755daffffffffe4570000000000001976a91437dc45a3b18c5e08994aa540313f6a400b4b6ace88ac1e30ec2ffa98ad46078f5c52d130d5114b9d659328aca84e76514a4d0d4bea23000000006b483045022100ad8d239f75ee194a48dc7b4ec92b7c27fd04c84840f402e12f14d0f22d03e05802206f3e0b950d7a510881c023a24045a2527b7235f2f5d24371d423cdc5d5106e724121027b7ca9e7a9df1c7cb3db3f1c383b41606bafe546d933e978fec383b6e650ff4afffffffff8240100000000001976a914723494e7c601496c69a24ac2820423b269a3e4d988ac03f8240100000000001976a914e8fc63df35216a12bb8bfafc1eda1f84e81b5c6688ac14620000000000001976a914f8092f50c4bf16cded1616431837d4c9ed12504088ac28620000000000001976a914f8092f50c4bf16cded1616431837d4c9ed12504088ac00000000",
		"d661ef75eda263092ba44f09589fcceb2bf1bef50b6a317677aeeada67919666": "010000000000000000ef015339f0fa4937e7282faa88bafcf5dcccdc81ccef80066b279427b78f7d4c73a7020000006a4730440220381e030b57776f1a36264fa8b55829591fc32bcd48be7a5b43a00fe96217504c0220639a0e6bfbd9ef44452ce2b81c8b67b949cd7b62907b8e7c899f46b120990a7441210360a71004d9304e841139ef4fd0199cd6ca4b23982e7e22cc26790eaf41f9b1b2ffffffff0e880500000000001976a91429b35c8345fc59ec01b279bf0fd2d231dcc5267a88ac03f8240100000000001976a9148cdef63b4af3b5655f77329e3f25c3f0079d0f1288ac80310200000000001976a914fd0d93743a6233bce87968f581bca17c09f2ad2b88ac95310200000000001976a914fd0d93743a6233bce87968f581bca17c09f2ad2b88ac00000000",
		"90d2bf0842c3f4f69df69bad4c0fa24cecaa2ef23c692456e52264f3e542b217": "",
		"9599ffe15e03b10365393ba44df23244f18369f11e227b926b6967e36f7dad2b": "010000000000000000ef01fdd50033677d79a041991a2a80e77a344bd5d381826d766696144d8a04a7c5b3010000006b483045022100d14f3f6dc3de3be915864a065184cc79a54e889e4aa264ac1d3407b1e56e7b8102200180584385ea25f7bfeb27ec7861f8f10c7b03edf3705391be0db7d4cdf03425412102a6449568536e8f31e5a3f3f22018ff58e0970ff26e8f9b3bc0fe58e391e51ed3ffffffff76310200000000001976a914caa9ec451498eaa6ff6322d36abc9ee1803793a988ac03f8240100000000001976a91423384a3a77ddeb844b3a966c201f21fb206a559988ac34860000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac49860000000000001976a9146b84588f97d12dfd6873c0f09dc1d5df211cc5c688ac00000000",
		"5069f5e52d4db32604db4bd07c4975e5581e3e2f23a416f7e42c82d1c2e3a636": "010000000000000000ef03f86c4cbbb5b253d096f8460e50d5a60a569fbf2b32985cb4114c9cbdab47c75f010000006b483045022100d161201f60a1e12c05b92f732c02084bebe6920466b8341476c0f1e4811c53f1022027eebea994eefe5555699ef433354fb09d2d16c21824ff5e489117b288fd51bd4121033b00509617f37d19a3e4d0bb99889fdf29ed0e67f9654df06b30791287182747ffffffff14620000000000001976a914f8092f50c4bf16cded1616431837d4c9ed12504088acf86c4cbbb5b253d096f8460e50d5a60a569fbf2b32985cb4114c9cbdab47c75f020000006a473044022004e9229b2b3b76e7c9868d79df97c5989e5523f415c30a086171165694d51c730220532b72bff250d51e1dbba39c8241f77db32e64d5ddf52ea92fc765cac0522b734121033b00509617f37d19a3e4d0bb99889fdf29ed0e67f9654df06b30791287182747ffffffff28620000000000001976a914f8092f50c4bf16cded1616431837d4c9ed12504088ac28b966bc86417f5634a58b535a6c6d8c2e80643510df6db535fb04d102dd8b0a000000006b483045022100e911a5e8b999352bea09a0921c132c4a114f2fc8e05b455d93b209d8b9e45a090220323cf47a4d552743cb933d8d1f9d2586f14ed0c41f1ed165b6fbb9ffaf275d2d412103cb455a9276eea85e54cebea783a6b46c16177dd750b48afad2e46d3aef0bb57dfffffffff8240100000000001976a914a21adc5b90591829d0a3d206c7ad23edc55d6cde88ac03f8240100000000001976a914b9a45a7ebbbbebf93bc9fe9e7eb36daf5fc277ec88ac13620000000000001976a91429b35c8345fc59ec01b279bf0fd2d231dcc5267a88ac28620000000000001976a91429b35c8345fc59ec01b279bf0fd2d231dcc5267a88ac00000000",
		"8b23be5e43c06e573898f73f061249504e111c53e4bd19e58b8b036cece917fb": "010000000000000000ef0468f77fa544a2e21ef1b6fefe78e677df30f53c3b71317e3b9c12402a06d74a0a000000006a47304402207d1fddb3db90f27c8f94ec7fc4f04e4d5087d34d04621417a06d3208a54e90d6022007f45d1d1ae56e1978db5c2c27bba1ff9dbbd08cbda074db940a087739390f03412103cb455a9276eea85e54cebea783a6b46c16177dd750b48afad2e46d3aef0bb57dffffffffe4570000000000001976a914a21adc5b90591829d0a3d206c7ad23edc55d6cde88ac2f197dd7d1be75596b565b66752e66ae552c746da6b6e941a7149e7d6d706515010000006b4830450221009383063a08bde06cdf40ca56d583dfd9d238d7c16897ec4f2e450b088eb98741022003fa33add68c7665d6e3d2db0fbf4ec47cc5ea8ae314b63cc136bacf611480234121023802ceada489c20955b4f08b9aceb6f1a96798bb1862cb0b08fba35176dfbb9dffffffff17620000000000001976a91434c37666833faf4968fb5b4e0aef417e59bbd3ca88ac2f197dd7d1be75596b565b66752e66ae552c746da6b6e941a7149e7d6d706515020000006b483045022100d78384ecf8899e62e2108389d4ec8d11354dc7aaa3828ae40b89343f409da51902200f107685d50b5e5f6400acf85edd900a27643696bb949c42281eff641efccb6b4121023802ceada489c20955b4f08b9aceb6f1a96798bb1862cb0b08fba35176dfbb9dffffffff2b620000000000001976a91434c37666833faf4968fb5b4e0aef417e59bbd3ca88ac08c3e7e4840bbfeea9803b6117ccc1d64a50f182faa9d633e9d73e07accc533b000000006a473044022046010956fba3309d72d27f6277e57abb3a3f2218d666b4ceec41fa2ad56405a802203ee74082dec3d59f51eb8726e8cb84a888b51eabb5be98e640a80ead53eb30e0412103cb455a9276eea85e54cebea783a6b46c16177dd750b48afad2e46d3aef0bb57dfffffffff8240100000000001976a914a21adc5b90591829d0a3d206c7ad23edc55d6cde88ac03f8240100000000001976a914e8fc63df35216a12bb8bfafc1eda1f84e81b5c6688ac088e0000000000001976a91434c37666833faf4968fb5b4e0aef417e59bbd3ca88ac1d8e0000000000001976a91434c37666833faf4968fb5b4e0aef417e59bbd3ca88ac00000000",
	}
)
